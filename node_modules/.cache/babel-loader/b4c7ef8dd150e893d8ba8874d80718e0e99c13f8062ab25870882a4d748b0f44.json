{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MS\\\\Desktop\\\\ReactPractices\\\\hope\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\n// import About from \"./Components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert.js\";\n// import { BrowserRouter as Router, Route, Link, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [mode, setMode] = useState(\"light\");\n  let [alert, setAlert] = useState(null);\n  let showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  let toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#050316\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        name: \"TextUtils\",\n        home: \"Home\",\n        socialLinks: \"About\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      heading: \"Enter the text below\",\n      mode: mode,\n      alert: alert,\n      showAlert: showAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","className","name","home","socialLinks","fileName","_jsxFileName","lineNumber","columnNumber","heading","_c","$RefreshReg$"],"sources":["C:/Users/MS/Desktop/ReactPractices/hope/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\n// import About from \"./Components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert.js\";\n// import { BrowserRouter as Router, Route, Link, Routes } from \"react-router-dom\";\n\nfunction App() {\n  let [mode, setMode] = useState(\"light\");\n\n  let [alert, setAlert] = useState(null);\n\n  let showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  let toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#050316\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <div className=\"App\">\n          <Navbar\n            name=\"TextUtils\"\n            home=\"Home\"\n            socialLinks=\"About\"\n            mode={mode}\n            toggleMode={toggleMode}\n          />\n        </div>\n        <Alert alert={alert} />\n        {/* <Routes> */}\n          {/* <Route path=\"/About\" element= /> */}\n          {/* {<About mode={mode}/>} */}\n          {<TextForm\n              heading=\"Enter the text below\"\n              mode={mode}\n              alert={alert}\n              showAlert={showAlert}\n            />}\n          \t\t\t{/* <Route path=\"/TextForm\" element= />\n        </Routes>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,uBAAuB;AACzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAEvC,IAAI,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,IAAIY,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACjCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,IAAIM,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIT,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACpD,CAAC,MAAM;MACLH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACrD;EACF,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBAEInB,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBnB,OAAA,CAACN,MAAM;QACL2B,IAAI,EAAC,WAAW;QAChBC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBlB,IAAI,EAAEA,IAAK;QACXS,UAAU,EAAEA;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN3B,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAIpB3B,OAAA,CAACL,QAAQ;MACNiC,OAAO,EAAC,sBAAsB;MAC9BvB,IAAI,EAAEA,IAAK;MACXE,KAAK,EAAEA,KAAM;MACbE,SAAS,EAAEA;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA,eAIR,CAAC;AAEP;AAACvB,EAAA,CAtDQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}