{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MS\\\\Desktop\\\\ReactPractices\\\\second\\\\hope\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [mode, setMode] = useState(\"light\");\n  let [alert, setAlert] = null;\n  let showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  let toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#050316';\n      setAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        name: \"TextUtils\",\n        homePage: \"Home\",\n        socialLinks: \"Media\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the text below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ckwlr2Ue1/16M01etSJDlsATeMQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","children","className","name","homePage","socialLinks","fileName","_jsxFileName","lineNumber","columnNumber","heading","_c","$RefreshReg$"],"sources":["C:/Users/MS/Desktop/ReactPractices/second/hope/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert.js\";\n\nfunction App() {\n  let [mode, setMode] = useState(\"light\");\n\n  let [alert,setAlert]=(null);\n\n  let showAlert =(message,type)=>{\n    setAlert({\n    msg:message,\n    type:type\n    })\n  }\n\n\n  let toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor='#050316';\n      setAlert(\"Dark mode has been enabled\",\"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor='white'; \n      \n    }\n  };\n\n\n  return (\n    <>\n      <div className=\"App\">\n        <Navbar\n          name=\"TextUtils\"\n          homePage=\"Home\"\n          socialLinks=\"Media\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n      </div>\n      <Alert alert={alert}/>\n\n      <div className=\"container my-3\">\n        <TextForm heading=\"Enter the text below\" mode={mode} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAEvC,IAAI,CAACU,KAAK,EAACC,QAAQ,CAAC,GAAE,IAAK;EAE3B,IAAIC,SAAS,GAAEA,CAACC,OAAO,EAACC,IAAI,KAAG;IAC7BH,QAAQ,CAAC;MACTI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACL,CAAC,CAAC;EACJ,CAAC;EAGD,IAAIE,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIR,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,SAAS;MAC7CT,QAAQ,CAAC,4BAA4B,EAAC,SAAS,CAAC;IAClD,CAAC,MAAM;MACLF,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;IAE7C;EACF,CAAC;EAGD,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA;MAAKmB,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBlB,OAAA,CAACN,MAAM;QACL0B,IAAI,EAAC,WAAW;QAChBC,QAAQ,EAAC,MAAM;QACfC,WAAW,EAAC,OAAO;QACnBjB,IAAI,EAAEA,IAAK;QACXQ,UAAU,EAAEA;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEtB1B,OAAA;MAAKmB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7BlB,OAAA,CAACL,QAAQ;QAACgC,OAAO,EAAC,sBAAsB;QAACtB,IAAI,EAAEA;MAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA,eACN,CAAC;AAEP;AAACtB,EAAA,CA5CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}