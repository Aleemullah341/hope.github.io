{"ast":null,"code":"import _slicedToArray from\"C:/Users/MS/Desktop/ReactPractices/hope/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./App.css\";import Navbar from\"./Components/Navbar\";import TextForm from\"./Components/TextForm\";// import About from \"./Components/About\";\nimport React,{useState}from\"react\";import Alert from\"./Components/Alert.js\";// import { BrowserRouter as Router, Route, Link, Routes } from \"react-router-dom\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};var toggleMode=function toggleMode(){if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#050316\";showAlert(\"Dark mode has been enabled\",\"success\");}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";showAlert(\"Light mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Navbar,{name:\"TextUtils\",home:\"Home\",socialLinks:\"About\",mode:mode,toggleMode:toggleMode})}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(TextForm,{heading:\"Enter the text below\",mode:mode,alert:alert,showAlert:showAlert})]});}export default App;","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","className","name","home","socialLinks","heading"],"sources":["C:/Users/MS/Desktop/ReactPractices/hope/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\n// import About from \"./Components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert.js\";\n// import { BrowserRouter as Router, Route, Link, Routes } from \"react-router-dom\";\n\nfunction App() {\n  let [mode, setMode] = useState(\"light\");\n\n  let [alert, setAlert] = useState(null);\n\n  let showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  let toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#050316\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <div className=\"App\">\n          <Navbar\n            name=\"TextUtils\"\n            home=\"Home\"\n            socialLinks=\"About\"\n            mode={mode}\n            toggleMode={toggleMode}\n          />\n        </div>\n        <Alert alert={alert} />\n        {/* <Routes> */}\n          {/* <Route path=\"/About\" element= /> */}\n          {/* {<About mode={mode}/>} */}\n          {<TextForm\n              heading=\"Enter the text below\"\n              mode={mode}\n              alert={alert}\n              showAlert={showAlert}\n            />}\n          \t\t\t{/* <Route path=\"/TextForm\" element= />\n        </Routes>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"6HAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C;AACA,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,uBAAuB,CACzC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAsBT,QAAQ,CAAC,OAAO,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAElB,IAAAI,UAAA,CAAwBd,QAAQ,CAAC,IAAI,CAAC,CAAAe,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEpB,GAAI,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,OAAO,CAAEC,IAAI,CAAK,CACjCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,GAAI,CAAAM,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACrB,GAAIX,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACpD,CAAC,IAAM,CACLL,OAAO,CAAC,OAAO,CAAC,CAChBW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CACF,CAAC,CAED,mBACEX,KAAA,CAAAF,SAAA,EAAAuB,QAAA,eAEIzB,IAAA,QAAK0B,SAAS,CAAC,KAAK,CAAAD,QAAA,cAClBzB,IAAA,CAACN,MAAM,EACLiC,IAAI,CAAC,WAAW,CAChBC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,OAAO,CACnBpB,IAAI,CAAEA,IAAK,CACXW,UAAU,CAAEA,UAAW,CACxB,CAAC,CACC,CAAC,cACNpB,IAAA,CAACF,KAAK,EAACe,KAAK,CAAEA,KAAM,CAAE,CAAC,cAIpBb,IAAA,CAACL,QAAQ,EACNmC,OAAO,CAAC,sBAAsB,CAC9BrB,IAAI,CAAEA,IAAK,CACXI,KAAK,CAAEA,KAAM,CACbE,SAAS,CAAEA,SAAU,CACtB,CAAC,EAIR,CAAC,CAEP,CAEA,cAAe,CAAAV,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}